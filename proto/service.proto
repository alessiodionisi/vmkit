syntax = "proto3";

option go_package = "github.com/alessiodionisi/vmkit/proto";

import "disk.proto";
import "virtualmachine.proto";
import "image.proto";

service VMKit {
  // DiskCreate creates a new disk.
  // The disk can be created from an image or from scratch.
  rpc DiskCreate(DiskCreateRequest) returns (DiskCreateResponse);
  // DiskDelete deletes a disk.
  // The disk must be detached from any virtual machine. 
  rpc DiskDelete(DiskDeleteRequest) returns (DiskDeleteResponse);
  // DiskResize resizes a disk.
  // The disk must be detached from any virtual machine. The size must be greater than the current size.
  rpc DiskResize(DiskResizeRequest) returns (DiskResizeResponse);
  // DiskList lists all disks.
  rpc DiskList(DiskListRequest) returns (DiskListResponse);
  // DiskAttach attaches a disk to a virtual machine.
  // The virtual machine must be stopped.
  rpc DiskAttach(DiskAttachRequest) returns (DiskAttachResponse);

  // VirtualMachineCreate creates a new virtual machine.
  rpc VirtualMachineCreate(VirtualMachineCreateRequest) returns (VirtualMachineCreateResponse);
  // VirtualMachineDelete deletes a virtual machine.
  // The virtual machine must be stopped.
  rpc VirtualMachineDelete(VirtualMachineDeleteRequest) returns (VirtualMachineDeleteResponse);
  // VirtualMachineStart starts a virtual machine.
  // The virtual machine must be stopped.
  rpc VirtualMachineStart(VirtualMachineStartRequest) returns (VirtualMachineStartResponse);
  // VirtualMachineStop stops a virtual machine.
  // The virtual machine must be started.
  rpc VirtualMachineStop(VirtualMachineStopRequest) returns (VirtualMachineStopResponse);
  // VirtualMachineList lists all virtual machines.
  rpc VirtualMachineList(VirtualMachineListRequest) returns (VirtualMachineListResponse);

  // ImagePull pulls an image in the local storage.
  rpc ImagePull(ImagePullRequest) returns (ImagePullResponse);
  // ImageCreate creates a new image.
  // The image can be created from a disk or from a remote resource.
  rpc ImageCreate(ImageCreateRequest) returns (ImageCreateResponse);
  // ImageDelete deletes an image.
  rpc ImageDelete(ImageDeleteRequest) returns (ImageDeleteResponse);
  // ImageList lists all images.
  rpc ImageList(ImageListRequest) returns (ImageListResponse);
}
